#!/bin/bash

# NAME
# 	ident - generate identity matrix of specified size
# SYNOPSIS
#		ident ROWS COLS

function ident(){
	y=0
	while [ $y -lt $1 ]
	do
		x=0
		((y++))
		while [ $x -lt $2 ]
		do
			((x++))
			if [ $x -eq $y ]
			then
				echo -n 1
			else
				echo -n 0
			fi
			if [ $x -ne $2 ]
			then
				echo -ne "\t"
			else
				echo
			fi
		done
	done
}

# NAME
#	Error
# SYNOPSIS
#	Dump error message and exit

err() {
	echo $1>&2
	exit 1
}

# NAME
#	getRowCount - gets the row count of input
# SYNOPSIS
#	getRowCount input
#	rowVar=$?

function getRowCount() {
	rowCount=0
	while read -r line
	do
		rowCount=$(( $rowCount+1 ))
	done < $1
	return $rowCount
}

# NAME
#	getColCount - gets the column count of input
# SYNOPSIS
#	getColCount input
#	colVar=$?

function getColCount() {
	colCount=0
	read -r line < $1
	for i in $line
	do
		colCount=$(( $colCount+1))
	done
	return $colCount
}

# NAME
# 	dims - prints error message to stderr, nothing to stdout and
#	return value != 0 if:
#		Argument count is greater than 1
#		Argument count is 1 but the file named by argument 1
#		is not readable
#	Otherwise, prints "ROW COLS" to stdout, nothing to stderr and
#	returns 0
# SYNOPSIS
#	dims MATRIX

function dims() {
	# check that there is no more than 1 argument
	if [ $# -gt 1 ]
	then
		err "Dims cannot take more than 1 argument."
	
	# check that there are no arguments (thus matrix is piped)
	elif [ $# -eq 0 ]
	then
		datafilepath="datafile$$"
		cat > $datafilepath
		getRowCount $datafilepath
		rowCount=$?
		getColCount $datafilepath
		colCount=$?
		echo "$rowCount $colCount"
		rm $datafilepath

	# check that the file exists and is readable
	elif [ -r $1 ]
	# file exists and is readable
	then
		getRowCount $1
		rowCount=$?
		getColCount $1
		colCount=$?
		echo "$rowCount $colCount"
	# file is not readable, print error
	else
		err "File is not found or is not readable."
	fi
}

function trtest() {
	getRowCount $1
	rowCount=$?
	getColCount $1
	colCount=$?

	tempCol="tempcolfile$$"

	colIndex=1
	rowIndex=1
	
	while read -r line
	do
		while [ $colIndex -le $(( $colCount * 2 )) ]
		do
			echo "$line"
			tempLine="tempLine$$"
			cat > $tempLine
			cat $tempLine
			cut -c $colIndex $tempLine >> $tempCol
			colIndex=$(( $colIndex + 2 ))
		done
		cat $tempCol
		rm $tempLine
	done < $1
	
	rm $tempCol

}

function transpose() {
	# check that there is no more than 1 argument
	if [ $# -gt 1 ]
	then
		err "Dims cannot take more than 1 argument."
	
	# check that there are no arguments (thus matrix is piped)
	elif [ $# -eq 0 ]
	then
		echo "no arguments"
	# check that the file exists and is readable
	elif [ -r $1 ]
	# file exists and is readable
	then
		dimensions="dimensions$$"
		dims $1 | "$dimensions"
		cat $dimensions | echo "$dimensions"
		for i in $dimensions
		do
			echo "$i"
		done
	# file is not readable, print error
	else
		err "File is not found or is not readable."
	fi
}

trap "echo 'CTRL+C received, exiting'; exit 1" INT HUP TERM
$1 "${@:2}"
